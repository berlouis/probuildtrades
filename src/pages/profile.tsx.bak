import { useState } from "react";
import axios from "axios";

export default function ProfilePage() {
  const [profile, setProfile] = useState<any>({});
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");

  // Fetch profile info when component mounts
  React.useEffect(() => {
    setLoading(true);
    axios.get("/api/profile")
      .then(res => setProfile(res.data))
      .catch(() => setError("Failed to load profile."))
      .finally(() => setLoading(false));
  }, []);

  const [email, setEmail] = useState("");
  const [phone, setPhone] = useState("");
  const [confirmToken, setConfirmToken] = useState("");
  const [confirmType, setConfirmType] = useState<"email"|"phone"|"">("");
  const [message, setMessage] = useState("");

  const handleUpdate = async (field: "email" | "phone") => {
    setError("");
    setMessage("");
    try {
      const res = await axios.patch("/api/profile", {
        [field]: field === "email" ? email : phone,
      });
      setMessage(res.data.message);
    } catch (err: any) {
      setError(err.response?.data?.error || "Update failed.");
    }
  };

  const handleConfirm = async () => {
    setError("");
    setMessage("");
    try {
      const res = await axios.post("/api/profile/confirm", {
        type: confirmType,
        token: confirmToken,
      });
      setMessage(res.data.message);
    } catch (err: any) {
      setError(err.response?.data?.error || "Confirmation failed.");
  };

  return (
    <div style={{ maxWidth: 480, margin: "40px auto", fontFamily: "sans-serif" }}>
      <h1>Profile</h1>
      {loading && <p>Loading...</p>}
      {error && <div style={{ color: "red" }}>{error}</div>}
      {message && <div style={{ color: "green" }}>{message}</div>}

      {!loading && (
        <>
          <div style={{ marginBottom: 16 }}>
            <div>
              <strong>Current Email:</strong> {profile.email}
            </div>
            <input
              type="email"
              placeholder="New email"
              value={email}
              onChange={e => setEmail(e.target.value)}
              style={{ marginRight: 8 }}
            />
            <button onClick={() => { setConfirmType("email"); handleUpdate("email"); }}>
              Update Email
            </button>
            {profile.pendingEmail && (
              <div style={{ color: "#b47d00", marginTop: 4 }}>
                Pending email: {profile.pendingEmail}
              </div>
            )}
          </div>
          <div style={{ marginBottom: 16 }}>
            <div>
              <strong>Current Phone:</strong> {profile.phone}
            </div>
            <input
              type="tel"
              placeholder="New phone"
              value={phone}
              onChange={e => setPhone(e.target.value)}
              style={{ marginRight: 8 }}
            />
            <button onClick={() => { setConfirmType("phone"); handleUpdate("phone"); }}>
              Update Phone
            </button>
            {profile.pendingPhone && (
              <div style={{ color: "#b47d00", marginTop: 4 }}>
                Pending phone: {profile.pendingPhone}
              </div>
            )}
          </div>
          <div style={{ marginBottom: 16 }}>
            <div>
              <strong>Current Email:</strong> {profile.email}
            </div>
            <input
              type="email"
              placeholder="New email"
              value={email}
              onChange={e => setEmail(e.target.value)}
              style={{ marginRight: 8 }}
            />
            <button onClick={() => { setConfirmType("email"); handleUpdate("email"); }}>
              Update Email
            </button>
            {profile.pendingEmail && (
              <div style={{ color: "#b47d00", marginTop: 4 }}>
                Pending email: {profile.pendingEmail}
              </div>
            )}
          </div>
          <div style={{ marginBottom: 16 }}>
            <div>
              <strong>Current Phone:</strong> {profile.phone}
            </div>
            <input
              type="tel"
              placeholder="New phone"
              value={phone}
              onChange={e => setPhone(e.target.value)}
              style={{ marginRight: 8 }}
            />
            <button onClick={() => { setConfirmType("phone"); handleUpdate("phone"); }}>
              Update Phone
            </button>
            {profile.pendingPhone && (
              <div style={{ color: "#b47d00", marginTop: 4 }}>
                Pending phone: {profile.pendingPhone}
              </div>
            )}
          </div>
          <div style={{ marginBottom: 16 }}>
            <input
              type="text"
              placeholder="Confirmation token"
              value={confirmToken}
              onChange={e => setConfirmToken(e.target.value)}
              style={{ marginRight: 8 }}
            />
            <select
              value={confirmType}
              onChange={e => setConfirmType(e.target.value as "email" | "phone")}
              style={{ marginRight: 8 }}
            >
              <option value="">Select type</option>
              <option value="email">Email</option>
              <option value="phone">Phone</option>
            </select>
            <button onClick={handleConfirm}>
              Confirm Change
            </button>
          </div>
        </>
      )}
    </div>
  );
}

  // Password change state
  const [oldPassword, setOldPassword] = useState("");
  const [newPassword, setNewPassword] = useState("");
  const [pwMessage, setPwMessage] = useState("");
  const [pwError, setPwError] = useState("");

  const handlePasswordChange = async () => {
    setPwError("");
    setPwMessage("");
    try {
      const res = await axios.patch("/api/profile/password", {
        oldPassword,
        newPassword,
      });
      setPwMessage(res.data.message);
      setOldPassword("");
      setNewPassword("");
    } catch (err: any) {
      setPwError(err.response?.data?.error || "Password update failed.");
    }
  };

      <div style={{ margin: "32px 0", borderTop: "1px solid #ccc", paddingTop: 24 }}>
        <h2>Change Password</h2>
        {pwError && <div style={{ color: "red" }}>{pwError}</div>}
        {pwMessage && <div style={{ color: "green" }}>{pwMessage}</div>}
        <div style={{ marginBottom: 8 }}>
          <input
            type="password"
            placeholder="Current password"
            value={oldPassword}
            onChange={e => setOldPassword(e.target.value)}
            style={{ marginRight: 8 }}
          />
        </div>
        <div style={{ marginBottom: 8 }}>
          <input
            type="password"
            placeholder="New password"
            value={newPassword}
            onChange={e => setNewPassword(e.target.value)}
            style={{ marginRight: 8 }}
          />
        </div>
        <button onClick={handlePasswordChange}>
          Update Password
        </button>
      </div>
