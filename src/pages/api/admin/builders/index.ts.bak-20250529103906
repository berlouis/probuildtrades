import { NextApiRequest, NextApiResponse } from "next";
import { prisma } from "@/lib/prisma";
import { checkForDuplicateBuilder } from "@/lib/checkDuplicateBuilder";

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method === "POST") {
    const { name, email, licenseId, phone, address, ...otherFields } = req.body;

    // 1. Check for duplicates
    const duplicates = await checkForDuplicateBuilder({ name, email, licenseId, phone, address });
    if (duplicates.length > 0) {
      // 2. Flag, suspend, and log
      for (const dup of duplicates) {
        await prisma.duplicateLicenseFlag.create({
          data: {
            builderId: dup.id,
            matchedField: "duplicate on create",
            existingValue: JSON.stringify(dup),
            attemptedValue: JSON.stringify({ name, email, licenseId, phone, address }),
            reason: "Auto-detected duplicate on create",
          }
        });
        await prisma.builder.update({
          where: { id: dup.id },
          data: { flagged: true, licenseStatus: "Suspended (Duplicate Detected)" }
        });
      }
      return res.status(409).json({ error: "Duplicate builder detected. Flagged and suspended.", duplicates });
    }

// 3. Create builder if no duplicates
    const builder = await prisma.builder.create({
      data: {
        name,
        email,
        licenseId,
        phone,
        address,
        ...otherFields
      }
    });
    return res.status(201).json({ builder });
  }

  // ... handle GET, etc.
  res.status(405).json({ error: "Method not allowed" });
}

// --- Duplicate License Alert (auto-inserted) ---
import { sendAlertEmail } from "@/lib/sendAlertEmail";

// Insert this after you flag a duplicate license, e.g. after prisma.duplicateLicenseFlag.create()
// Replace 'dupFlagged', 'builder' with your variables

if (typeof dupFlagged !== "undefined" && dupFlagged) {
  await sendAlertEmail(
    "admin@probuildtrades.com",
    "Duplicate License Detected",
    `<b>Builder flagged:</b> ${builder?.name ?? "N/A"} (${builder?.email ?? "N/A"})<br>
    <pre>${JSON.stringify(dupFlagged, null, 2)}</pre>`
  );
}

