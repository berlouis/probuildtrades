import { useEffect, useState } from "react";
import axios from "axios";

export default function Dashboard() {
  const [user, setUser] = useState<any>(null);
  const [clientSecret, setClientSecret] = useState<string | null>(null);
  const [subscription, setSubscription] = useState<any>(null);
  const [history, setHistory] = useState<any[]>([]);
  const [loading, setLoading] = useState(true);
  const [changeError, setChangeError] = useState<string>("");
  const [changeSaving, setChangeSaving] = useState<boolean>(false);
  const [error, setError] = useState("");

  useEffect(() => {
    async function fetchData() {
      try {
        const [userRes, subRes, historyRes] = await Promise.all([
          axios.get("/api/user/profile"),
          axios.get("/api/subscription/current"),
          axios.get("/api/subscription/history"),
        ]);
        setUser(userRes.data);
        setSubscription(subRes.data);
        setHistory(historyRes.data);
      } catch {
        setError("Failed to load dashboard data.");
      } finally {
        setLoading(false);
      }
    }
    fetchData();
  }, []);

  // State for Change Plan
  const [plans, setPlans] = useState<any[]>([]);
  const [loadingPlans, setLoadingPlans] = useState(true);
  const [errorPlans, setErrorPlans] = useState("");
  const [selectedPlanId, setSelectedPlanId] = useState<number | null>(null);
  const [selectedInterval, setSelectedInterval] = useState<"monthly" | "yearly">("monthly");
  const [changeSaving, setChangeSaving] = useState(false);
  const [changeError, setChangeError] = useState("");

  // Fetch available plans for Change Plan
  useEffect(() => {
    setLoadingPlans(true);
    axios
      .get("/api/admin/plans")
      .then((res) => setPlans(res.data))
      .catch(() => setErrorPlans("Failed to load plans."))
      .finally(() => setLoadingPlans(false));
  }, []);

      <section style={{ marginTop: 24 }}>
  return (
      <h1>Welcome, {user?.name || user?.email}</h1>
      <section style={{ marginTop: 24 }}>
        <h2>Your License Status</h2>
        <p>{user?.licenseStatus || "Unknown"}</p>
      </section>

      <section style={{ marginTop: 24 }}>
        <h2>Your Subscription</h2>
        {subscription ? (
          <div>
            <p><strong>Plan:</strong> {subscription.plan.name}</p>
            <p><strong>Interval:</strong> {subscription.paymentInterval}</p>
            <p><strong>Status:</strong> {subscription.status}</p>
            <p><strong>Started:</strong> {subscription.startedAt?.slice(0,10)}</p>
            <p><strong>Expires:</strong> {subscription.expiresAt?.slice(0,10)}</p>
          </div>
        ) : (
          <p>You do not have an active subscription.</p>
        )}
      </section>
      <section style={{ marginTop: 24 }}>
        <h2>Admin Plans</h2>
        {/* …whatever content you meant to show… */}
      </section>

        <h2>Change Plan</h2>
        {loadingPlans ? (
          <p>Loading plans...</p>
        ) : errorPlans ? (
          <p style={{ color: "red" }}>{errorPlans}</p>
        ) : (
          <form
            onSubmit={async (e) => {
              e.preventDefault();
              setChangeSaving(true);
              setChangeError("");
              try {
                await axios.post("/api/subscription/change", {
                  subscriptionId: subscription.id,
                  planId: selectedPlanId,
                  paymentInterval: selectedInterval,
                });
                window.location.reload();
              } catch (err: any) {
                setChangeError(err.response?.data?.error || "Change failed.");
              }
              setChangeSaving(false);
            }}
          >
            <div style={{ marginBottom: 8 }}>
              <label>
                Plan:
                <select
                  required
                  value={selectedPlanId ?? ""}
                  onChange={(e) => setSelectedPlanId(Number(e.target.value))}
                >
                  <option value="" disabled>Select a plan</option>
                  {plans.map((p) => (
                    <option key={p.id} value={p.id}>
                      {p.name}
                    </option>
                  ))}
                </select>
              </label>
            </div>
            <div style={{ marginBottom: 8 }}>
              <label>
                Interval:
                <select
                  value={selectedInterval}
                  onChange={(e) => setSelectedInterval(e.target.value)}
                >
                  <option value="monthly">Monthly</option>
                  <option value="yearly">Yearly</option>
                </select>
              </label>
            </div>
            {changeError && <p style={{ color: "red" }}>{changeError}</p>}
            <button type="submit" disabled={changeSaving}>
              {changeSaving ? "Changing..." : "Change Plan"}
            </button>
          </form>
        )}
      </section>

import { Elements } from "@stripe/react-stripe-js";
import { stripePromise } from "@/lib/stripe-client";
import PaymentForm from "@/components/PaymentForm"; // we’ll create this next


  // Fetch clientSecret for Stripe Elements
  useEffect(() => {
    if (subscription) {
      axios
        .post("/api/subscription/setup-intent", { subscriptionId: subscription.id })
        .then((res) => setClientSecret(res.data.clientSecret))
        .catch(() => {
          /* handle error if needed */
        });
    }
}, [subscription]);

return (
  <>
    {clientSecret && (
      <section style={{ marginTop: 24 }}>
        <h2>Update Payment Method</h2>
        <Elements stripe={stripePromise} options={{ clientSecret }}>
          <PaymentForm subscriptionId={subscription.id} />
        </Elements>
      </section>
    )}
  </>
);
}
